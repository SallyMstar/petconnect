{"version":3,"sources":["PetParade.js","App.js","serviceWorker.js","index.js"],"names":["PetParade","state","pets","filteredPets","shelterPets","_this2","this","props","length","react_default","a","createElement","className","selectedShelter","map","pet","id","key","$t","tabindex","aria-label","name","breeds","breed","media","photos","photo","src","alt","onMouseOver","markerMaker","shelterId","onMouseOut","Component","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getLocalPets","axios","get","then","res","setState","data","petfinder","catch","error","alert","console","log","getLocalShelters","orderedResults","shelters","shelter","sort","sortBy","renderMap","getShelterPets","urlShelter","shelterSelected","onShelterSelect","event","target","value","shelterData","filter","active","shelterMarkers","marker","setVisible","window","google","maps","trigger","url","index","document","getElementsByTagName","script","async","defer","parentNode","insertBefore","scriptInit","initMap","setLat","setLng","lat","lng","Map","getElementById","center","zoom","infoWindow","InfoWindow","address","address1","cityName","city","stateName","zipcode","zip","title","shelterInfo","concat","Marker","position","parseFloat","latitude","longitude","animation","Animation","DROP","addListener","setContent","open","setTimeout","close","setZoom","setCenter","getPosition","getAnimation","setAnimation","BOUNCE","getVisible","push","bind","assertThisInitialized","Fragment","onClick","role","src_PetParade","href","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.192c6876.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass PetParade extends Component {\n\n\tstate= {\n\t\tpets: [],\n\t\tfilteredPets: [],\n\t\tshelterPets: []\n\t}\n\nrender() {\n\tlet filteredPets = (((this.props.shelterPets)&&(this.props.shelterPets.length > 0)) ? (this.props.shelterPets) : (this.props.pets ))\n\n\treturn(\n\n\t\t<div className=\"section2\">\n\t\t{(((!this.props.shelterPets) || (this.props.shelterPets.length === 0) || (this.props.selectedShelter === 'OH209')) ? \n\t\t\t(<div className='noResults'>No shelter selected or no matching results.<br/>Viewing 25 nearby pets</div>):(\n\t\t\t\t<div className='noResults'>{this.props.shelterPets.length || 'No results. \\nViewing nearby' } pets (max 25)</div>\n\t\t\t\t))}\n\t\t\t{filteredPets.map((pet) =>\n\t\t\t\t\t<div id = 'petProfile'\n\t\t\t\t\t\tkey={pet.id.$t} \n\t\t\t\t\t\tclassName = \"item\">\n\t                \t<div \n\t                \tclassName ='petName'\n\t                \ttabindex='0'\n\t                \taria-label= {pet.name.$t}\n\t                \t>\n\t                \t\t~ {pet.name.$t} ~\n\t                \t\t\t<br/>\n\t                \t\t{pet.breeds.breed.$t}\n\t                \t</div>\n\t              {((pet.media.photos) && (pet.media.photos.photo[2].$t)) \n\t              \t\t? (<img \n\t                \t\tsrc={pet.media.photos.photo[2].$t} \n\t                \t\talt={pet.name.$t} \n\t                \t\tonMouseOver={() => this.props.markerMaker(pet.shelterId.$t)}\n\t                \t\tonMouseOut={() => this.props.markerMaker(this.props.selectedShelter)}\n\t                \t\ttabindex='0'\n\t                \t\t/>\n\t                \t) : (\n\t                \t\t<p tabindex='0'>no image available</p>\n\t                \t)\n\t                \t}\n\t                <div tabindex='0' aria-label={pet.shelterId.$t}>\n\t                Shelter {pet.shelterId.$t}\n\t                </div>\n\t\t\t\t\t</div>\n\n\t\t\t\t)}\n\t\t\t}\n\t\t</div>\n\n\t\t)\n}\n}\n\nexport default PetParade","import React, { Component } from 'react'\nimport sortBy from 'sort-by'\nimport axios from 'axios'\nimport PetParade from './PetParade'\nimport './App.css'\n\n  // global variables to allow access from any function\nlet map;\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n      this.state = {\n        pets: [],\n        shelters: [],\n        shelterSelected: false,\n        selectedShelter: 'all',\n        shelterData: [],\n        shelterPets: [],\n        shelterMarkers: []\n      };\n\n  this.onShelterSelect = this.onShelterSelect.bind(this);\n\n    }\n\n\n  componentDidMount() {\n    this.getLocalPets()\n    this.getLocalShelters()\n  }\n\n// ========================== Function Factory ====================================\n  // Create the function which can be passed or called as needed to get local pets\n  getLocalPets = () => {\n      const urlPets = 'https://api.petfinder.com/pet.find?key=1edf8545fafb2f223f05f30911af67fa&location=45150&output=basic&format=json';\n      // get array of local pets for adoption\n      axios.get(urlPets) \n        .then(res => {\n          this.setState({\n            pets: res.data.petfinder.pets.pet\n          })\n        })\n\n        .catch(error => {\n            alert('Sorry, No pet data was received from the server. Please try again.')\n        })\n\n          console.log('pets:')\n          console.log(this.state.pets)\n        };\n\n  // Create the function which can be passed or called as needed to get local shelters\n  getLocalShelters = () => {\n      const urlLocations = 'https://api.petfinder.com/shelter.find?key=1edf8545fafb2f223f05f30911af67fa&location=45150&output=basic&format=json';\n       // get array of local animal shelters\n      axios.get(urlLocations)\n        .then(res => {\n          let orderedResults = res.data.petfinder.shelters.shelter.sort(sortBy('name.$t'))\n          this.setState({\n            shelters: orderedResults\n          }, this.renderMap())\n\n          console.log('ordered list of shelters')\n          console.log(this.state.shelters)\n        })\n        .catch(error => {\n            alert('Sorry, No local shelter data was received from the server. Please try again.')\n            this.renderMap()\n        })\n    }\n\n  getShelterPets = (selectedShelter) => {\n    // get array of pets in the selected shelter\n    let urlShelter = 'https://api.petfinder.com/shelter.getPets?key=1edf8545fafb2f223f05f30911af67fa&output=basic&format=json&id='+selectedShelter;\n    this.setState({selectedShelter: selectedShelter})\n    axios.get(urlShelter)\n      .then(res => {  \n          let shelterPets = res.data.petfinder.pets.pet\n        this.setState({\n          shelterPets: shelterPets,\n              shelterSelected: true\n        })\n      console.log(shelterPets)\n      })\n      .catch(error => {\n            alert('Sorry, No pet data for the selected shelter was received from the server. Please try again.')\n        })\n    }\n\n    // When a shelter is selected from the menu, filter the markers and the pets\n  onShelterSelect = (event) =>{\n    console.log(event.target.value)\n    let selectedShelter = event.target.value\n    console.log(selectedShelter)\n    if(selectedShelter === 'all') {\n      this.setState({\n        selectedShelter: 'all',\n        shelterPets: [],\n        shelterData: [],\n        shelterSelected: false\n      })\n      this.markerMaker(selectedShelter)  // show all markers for 'all' selection\n      return\n      }\n      // get the shelter that matches the selection\n      let shelterData = this.state.shelters.filter((shelter) => {\n        return (shelter.key === event.target.value)\n      })\n        this.setState({\n          shelterData: shelterData  // set the selected shelter\n        })\n        // let shelterLat = parseFloat(shelterData[0].latitude.$t) \n        // let shelterLng = parseFloat(shelterData[0].longitude.$t) \n      this.getShelterPets(selectedShelter)  // get the pets for selected shelter\n      this.markerMaker(selectedShelter, true)     // show only the marker for the selected shelter\n    }\n    // marker filter based on selection\n  markerMaker = (selectedShelter, active) => {   \n    this.state.shelterMarkers.map((marker) => {\n      // only show the markers for selected locations\n      {(selectedShelter !== 'all')&&(selectedShelter !== marker.key)\n      ? marker.setVisible(false)\n      : marker.setVisible(true)}  \n\n      if((selectedShelter === marker.key) && (active === true)) {\n         (window.google.maps.event.trigger(marker, 'click'))\n    }       \n    })\n  }\n\n\n\n  // Draw the map =======================================================\n  renderMap = () => {  \n    let mapKey = \"AIzaSyAyEUmiQYNT6nrZK6ACULxyVASU8XcyWNc\"\n    scriptInit(\"httpss://maps.googleapis.com/maps/api/js?key=\"+mapKey+\"&callback=initMap\")\n    window.initMap = this.initMap  // specify where to find initMap for the callback function\n    }\n\n\n// Set the center for the renderMap() to use\n  initMap = (setLat, setLng) => {\n    let lat = (setLat || 39.185393)  // set selected location or initial center\n    let lng = (setLng || -84.274159) // set selected loaction or initial center\n    const map = new window.google.maps.Map(document.getElementById('map'), {\n            center: {\n              lat: lat, \n              lng: lng\n              },\n            zoom: (this.props.shelterSelected === true) ? 15 : 10\n        });\n\n// Create the infoWindow to call on when a marker is clicked\n    const infoWindow = new window.google.maps.InfoWindow()\n\n// Markers ============================================================\n    let shelterMarkers = []\n    // Loop over my shelter locations to put markers on the map\n    let shelters = this.state.shelters\n    shelters.map((shelter) => {\n\n      // set shelter data for use\n        let name = shelter.name.$t;\n        let id = shelter.id.$t;\n        let address = shelter.address1.$t;\n        let cityName = shelter.city.$t;\n        let stateName = shelter.state.$t;\n        let zipcode = shelter.zip.$t;\n        shelter.title = name;\n        shelter.key = id;\n        shelter.address = address;\n        shelter.cityName = cityName;\n        shelter.stateName = stateName;\n        shelter.zipcode = zipcode;\n\n\n      // InfoWindow Content ===========================================\n        let shelterInfo = \n                '<div>'+\n                  '<h3>'+`${shelter.title}`+'</h3>'+\n                    `${shelter.address || ''}`+\n                    '<br />'+\n                    `${shelter.cityName}`+', '+\n                    `${shelter.stateName}`+' '+\n                    `${shelter.zipcode}`+\n                '</div>';\n                // end infoWindow content\n\n      // Create the markers & drop them onto the map\n      // Only show the selected locations\n\n        let marker = new window.google.maps.Marker({\n          position: {\n            lat: parseFloat(shelter.latitude.$t), // parseFloat to convert from string to number\n            lng: parseFloat(shelter.longitude.$t)\n          },\n          map: map,\n          title: shelter.name.$t,\n          key: shelter.key,\n          animation: window.google.maps.Animation.DROP,\n        }) // end marker\n\n      // Show infowindow & toggle bounce on marker click\n        marker.addListener('click', function() {\n          infoWindow.setContent(shelterInfo)\n          infoWindow.open(map, marker)\n          setTimeout(function() {\n            infoWindow.close()},5000)\n          console.log(marker.key)\n          map.setZoom(13)\n          setTimeout(function() {\n            map.setZoom(10)\n            map.setCenter({\n              lat: 39.185393,\n              lng: -84.27415\n            })\n          }, 5000)\n          map.setCenter(marker.getPosition())\n          if(marker.getAnimation(true)) {\n              marker.setAnimation(null)\n          } else {\n            marker.setAnimation(window.google.maps.Animation.BOUNCE)\n              setTimeout(function() {\n                marker.setAnimation(null)}, 3000)\n          }\n        }); // end 1st listener function\n          console.log(marker.getVisible())\n          shelterMarkers.push(marker)\n\n\n    }) // end shelters.map\n      this.setState({\n        shelterMarkers: shelterMarkers\n      })\n\n} // end map ===========================================================\n\n\n  render() {\n\n      let pets = this.state.pets;\n      let shelters = this.state.shelters\n\n    return (\n<>\n  <div id = \"header\">\n    <h1>Furry Friend Finder</h1>\n  </div>\n\n  <div id = \"container\">\n          <div id= 'menu' className = \"section1\">\n              <legend><h3><em>Select a shelter:</em></h3></legend>\n                      <button \n                          tabindex='0'\n                          value='all'\n                          onClick = {(event) => this.onShelterSelect(event)}\n                          aria-label = 'View all area Shelters'\n                          >\n                          -- View all area shelters --\n                      </button>\n                      {shelters.map((shelter, index, key) =>\n                      <button \n                          tabindex='0'\n                          aria-label = {shelter.name.$t}\n                          key={index}\n                          value={shelter.id.$t}\n                          onClick = {(event) => this.onShelterSelect(event)}\n                          onMouseOver={() => this.markerMaker(shelter.id.$t)}\n                          onMouseOut={() => this.markerMaker(this.state.selectedShelter)}\n                          >\n                          {shelter.name.$t} ({shelter.id.$t})\n                          </button>\n                      )}\n            </div>\n\n        <div id = \"map\" tabindex='0' role='application'> \n        </div>\n\n      <PetParade \n        pets={this.state.pets} \n        shelterPets={this.state.shelterPets} \n        shelterSelected={this.state.shelterSelected}\n        selectedShelter={this.state.selectedShelter} \n        markerMaker = {this.markerMaker}\n        />\n\n</div>\n\n\n  <div className='section3'>\n      *Please note that more than one shelter may be based in the same location.<br/>\n      Pet data provided by PetFinder API, & the <a href=\"httpss://pngtree.com/free-icon/paws_626868\">Paw Print Icon</a> is from pngtree.com\n  </div>\n\n</>\n    );\n  }\n}\n\nfunction scriptInit(url) {\n  let index = window.document.getElementsByTagName('script')[0]\n  let script = window.document.createElement('script')\n  script.src = url\n  script.async = true\n  script.defer = true\n  index.parentNode.insertBefore(script,index)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}